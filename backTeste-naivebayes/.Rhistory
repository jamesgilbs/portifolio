stock <- "^BVSP" # stock
start <- "2008-01-01"
end <- "2021-06-25" # Sys.Date()
periodicidade <- "daily"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
View(atv)
stock <- "^BVSP" # stock
start <- "2008-01-01"
end <- "2021-06-25" # Sys.Date()
periodicidade <- "daily"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
grafico <-cbind(atv[,4])
dygraph(grafico, ylab="Retorno Logaritmo X Estimativa de volatilidade",main=stock) %>%
dySeries(label = stock) %>%
dyOptions(colors = c("blue")) %>%
dyOptions(stackedGraph = TRUE) %>%
dyAxis("y", label = (paste("Preço de fechamento de", stock))) %>%
dyOptions(stepPlot = TRUE)
dyRangeSelector()
acf(atv[,4])
acf(atv[,4])
title(paste("ACF Análise de Autocorrelação Serial de", stock), line = +1)
acf(atv[,4], type="partial")
title(paste("PACF parcial do log retorno de", stock), line = +1)
title(paste("PACF parcial do log retorno de", stock), line = +1)
rD <- (100 * dailyReturn(atv)) # Retorno anual
summary(rD)
rW <- (100 * weeklyReturn(atv)) # Retorno anual
summary(rW)
rM <- (100 * monthlyReturn(atv)) # Retorno anual
summary(rM)
rQ <- (100 * quarterlyReturn(atv)) # Retorno anual
summary(rQ)
rA <- (100 * yearlyReturn(atv)) # Retorno anual
summary(rA)
rA
atvRet <- na.omit(100 * diff(log(atv[,4]))) # Retorno percentual
atvRet <- atvRet[-1,]
summary(atvRet) # Estatíticas gerais
sd(atvRet) # Desvio padrão
plot(atvRet, col="blue", lwd = 2)
title(paste("Retorno ao longo do Período", stock), line = +1)
plot(atvRet^2, col="brown", lwd = 2)
title(paste("Retorno Logaritmo ao Quadrado(Cluster de Volatilidade) de", stock), line = +1)
grafico <-cbind(atv[,4])
dygraph(grafico, ylab="Retorno Logaritmo X Estimativa de volatilidade",main=stock) %>%
dySeries(label = stock) %>%
dyOptions(colors = c("blue")) %>%
dyOptions(stackedGraph = TRUE) %>%
dyAxis("y", label = (paste("Preço de fechamento de", stock))) %>%
dyOptions(stepPlot = TRUE)
dyRangeSelector()
grafico <-cbind(atv[,4])
dygraph(grafico, ylab="Retorno Logaritmo X Estimativa de volatilidade",main=stock) %>%
dySeries(label = stock) %>%
dyOptions(colors = c("blue")) %>%
dyOptions(stackedGraph = TRUE) %>%
dyAxis("y", label = (paste("Preço de fechamento de", stock))) %>%
dyOptions(stepPlot = TRUE) %>%
dyRangeSelector()
stock <- "^BVSP" # stock
start <- "2008-01-01"
end <- "2021-06-25" # Sys.Date()
periodicidade <- "monthly"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
grafico <-cbind(atv[,4])
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
View(atv)
periodicidade <- "quartly"
stock <- "^BVSP" # stock
start <- "2008-01-01"
end <- "2021-06-25" # Sys.Date()
periodicidade <- "quartly"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
periodicidade <- "monthly"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
grafico <-cbind(atv[,4])
dygraph(grafico, ylab="Retorno Logaritmo X Estimativa de volatilidade",main=stock) %>%
dySeries(label = stock) %>%
dyOptions(colors = c("blue")) %>%
dyOptions(stackedGraph = TRUE) %>%
dyAxis("y", label = (paste("Preço de fechamento de", stock))) %>%
dyOptions(stepPlot = TRUE) %>%
dyRangeSelector()
acf(atv[,4])
title(paste("ACF Análise de Autocorrelação Serial de", stock), line = +1)
acf(atv[,4], type="partial")
title(paste("PACF parcial do log retorno de", stock), line = +1)
rD <- (100 * dailyReturn(atv)) # Retorno anual
summary(rD)
rW <- (100 * weeklyReturn(atv)) # Retorno anual
summary(rW)
rM <- (100 * monthlyReturn(atv)) # Retorno anual
summary(rM)
rQ <- (100 * quarterlyReturn(atv)) # Retorno anual
summary(rQ)
rA <- (100 * yearlyReturn(atv)) # Retorno anual
summary(rA)
rA
atvRet <- na.omit(100 * diff(log(atv[,4]))) # Retorno percentual
atvRet <- atvRet[-1,]
summary(atvRet) # Estatíticas gerais
sd(atvRet) # Desvio padrão
plot(atvRet, col="blue", lwd = 2)
title(paste("Retorno ao longo do Período", stock), line = +1)
plot(atvRet^2, col="brown", lwd = 2)
title(paste("Retorno Logaritmo ao Quadrado(Cluster de Volatilidade) de", stock), line = +1)
rm(list=ls())
library(quantmod)
library(ggplot2)
library(forecast)
library(dplyr)
library(stochvol)
library(dygraphs)
options(max.print=1000000) # Número de linhas para visualização
options(digits = 2, OutDec = ",") # Configuração decimal
stock <- "^BVSP" # stock
start <- "2008-01-01"
end <- "2021-06-25" # Sys.Date()
periodicidade <- "monthly"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
grafico <-cbind(atv[,4])
dygraph(grafico, ylab="Retorno Logaritmo X Estimativa de volatilidade",main=stock) %>%
dySeries(label = stock) %>%
dyOptions(colors = c("blue")) %>%
dyOptions(stackedGraph = TRUE) %>%
dyAxis("y", label = (paste("Preço de fechamento de", stock))) %>%
dyOptions(stepPlot = TRUE) %>%
dyRangeSelector()
acf(atv[,4])
acf(atv[,4])
title(paste("ACF Análise de Autocorrelação Serial de", stock), line = +1)
acf(atv[,4], type="partial")
title(paste("PACF parcial do log retorno de", stock), line = +1)
rD <- (100 * dailyReturn(atv)) # Retorno anual
summary(rD)
rW <- (100 * weeklyReturn(atv)) # Retorno anual
summary(rW)
rM <- (100 * monthlyReturn(atv)) # Retorno anual
summary(rM)
rQ <- (100 * quarterlyReturn(atv)) # Retorno anual
summary(rQ)
rA <- (100 * yearlyReturn(atv)) # Retorno anual
summary(rA)
rA
atvRet <- na.omit(100 * diff(log(atv[,4]))) # Retorno percentual
atvRet <- atvRet[-1,]
summary(atvRet) # Estatíticas gerais
sd(atvRet) # Desvio padrão
plot(atvRet, col="blue", lwd = 2)
title(paste("Retorno ao longo do Período", stock), line = +1)
plot(atvRet^2, col="brown", lwd = 2)
title(paste("Retorno Logaritmo ao Quadrado(Cluster de Volatilidade) de", stock), line = +1)
postAtv <- svsample(atvRet) # Distribuição a Priori
summary(postAtv, showlatent=FALSE) # Para ter eacesso aos parâmetros estimados da posteriori
plot(postAtv) # Densidade marginal (mu(B0) phi(B1) sigma) IC(Intervalo de credibilidade Bayesiana)
residAtv<-resid(postAtv) # Probabilidade Quanti-Quantil (Qualidade de ajuste)
plot(residAtv, col="darkblue",cex=0.5)
title(paste("Retorno Logaritmo ao Quadrado(Cluster de Volatilidade) de", stock), line = +1)
postAtv <- svsample(atvRet) # Distribuição a Priori
summary(postAtv, showlatent=FALSE) # Para ter eacesso aos parâmetros estimados da posteriori
plot(postAtv) # Densidade marginal (mu(B0) phi(B1) sigma) IC(Intervalo de credibilidade Bayesiana)
View(atv)
rm(list=ls())
library(quantmod)
library(ggplot2)
library(forecast)
library(dplyr)
library(stochvol)
library(dygraphs)
options(max.print=1000000) # Número de linhas para visualização
options(digits = 2, OutDec = ",") # Configuração decimal
stock <- "^BVSP" # stock
start <- "2008-01-01"
end <- "2021-06-25" # Sys.Date()
periodicidade <- "monthly"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
str(atv) # Estrutura da série
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
grafico <-cbind(atv[,4])
dygraph(grafico, ylab="Retorno Logaritmo X Estimativa de volatilidade",main=stock) %>%
dySeries(label = stock) %>%
dyOptions(colors = c("blue")) %>%
dyOptions(stackedGraph = TRUE) %>%
dyAxis("y", label = (paste("Preço de fechamento de", stock))) %>%
dyOptions(stepPlot = TRUE) %>%
dyRangeSelector()
dygraph(grafico, ylab="Retorno Logaritmo X Estimativa de volatilidade",main=stock) %>%
dySeries(label = stock) %>%
dyOptions(colors = c("blue")) %>%
dyOptions(stackedGraph = TRUE) %>%
dyAxis("y", label = (paste("Preço de fechamento de", stock))) %>%
dyOptions(stepPlot = TRUE) %>%
dyRangeSelector()
acf(atv[,4])
title(paste("ACF Análise de Autocorrelação Serial de", stock), line = +1)
title(paste("ACF Análise de Autocorrelação Serial de", stock), line = +1)
acf(atv[,4], type="partial")
title(paste("PACF parcial do log retorno de", stock), line = +1)
rD <- (100 * dailyReturn(atv)) # Retorno anual
summary(rD)
rW <- (100 * weeklyReturn(atv)) # Retorno anual
summary(rW)
rM <- (100 * monthlyReturn(atv)) # Retorno anual
summary(rM)
rQ <- (100 * quarterlyReturn(atv)) # Retorno anual
summary(rQ)
rA <- (100 * yearlyReturn(atv)) # Retorno anual
summary(rA)
rA
atvRet <- na.omit(100 * diff(log(atv[,4]))) # Retorno percentual
atvRet <- atvRet[-1,]
summary(atvRet) # Estatíticas gerais
sd(atvRet) # Desvio padrão
plot(atvRet, col="blue", lwd = 2)
title(paste("Retorno ao longo do Período", stock), line = +1)
plot(atvRet^2, col="brown", lwd = 2)
title(paste("Retorno Logaritmo ao Quadrado(Cluster de Volatilidade) de", stock), line = +1)
postAtv <- svsample(atvRet) # Distribuição a Priori
summary(postAtv, showlatent=FALSE) # Para ter eacesso aos parâmetros estimados da posteriori
plot(postAtv) # Densidade marginal (mu(B0) phi(B1) sigma) IC(Intervalo de credibilidade Bayesiana)
residAtv<-resid(postAtv) # Probabilidade Quanti-Quantil (Qualidade de ajuste)
plot(residAtv, col="darkblue",cex=0.5)
rm(list=ls())
library(quantmod)
library(ggplot2)
library(forecast)
library(dplyr)
library(stochvol)
library(dygraphs)
options(max.print=1000000) # Número de linhas para visualização
options(digits = 2, OutDec = ",") # Configuração decimal
stock <- "^BVSP" # stock
start <- "2008-01-01"
end <- "2021-06-25" # Sys.Date()
periodicidade <- "monthly"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='green',dn.col='darkred'))
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('black', up.col='green',dn.col='darkred'))
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='white',dn.col='darkred'))
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='white',dn.col='vlack'))
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='white',dn.col='black'))
library(data.table)
library(ggplot2)
library(tseries)
library(lubridate)
GBP_EUR <- fread("GBP_EUR_COINTEGRATION.csv", header = TRUE, sep = ";")
GBP_EUR <- data.frame(GBP_EUR)
names(GBP_EUR)
GBP_EUR <- fread("GBP_EUR_COINTEGRATION.csv", header = TRUE, sep = ";")
GBP_EUR <- fread("GBP_EUR_COINTEGRATION.csv", header = TRUE, sep = ";")
rm(list=ls())
library(quantmod)
library(ggplot2)
library(forecast)
library(dplyr)
library(stochvol)
library(dygraphs)
options(max.print=1000000) # Número de linhas para visualização
options(digits = 2, OutDec = ",") # Configuração decimal
stock <- "^BVSP" # stock
start <- "2008-01-01"
end <- "2021-06-25" # Sys.Date()
periodicidade <- "monthly"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='white',dn.col='black'))
grafico <-cbind(atv[,4])
dygraph(grafico, ylab="Retorno Logaritmo X Estimativa de volatilidade",main=stock) %>%
dySeries(label = stock) %>%
dyOptions(colors = c("blue")) %>%
dyOptions(stackedGraph = TRUE) %>%
dyAxis("y", label = (paste("Preço de fechamento de", stock))) %>%
dyOptions(stepPlot = TRUE) %>%
dyRangeSelector()
acf(atv[,4])
library(quantmod)
library(ggplot2)
library(forecast)
library(dplyr)
library(stochvol)
library(dygraphs)
rm(list=ls())
library(quantmod)
library(ggplot2)
library(forecast)
library(dplyr)
library(stochvol)
library(dygraphs)
options(max.print=1000000) # Número de linhas para visualização
options(digits = 2, OutDec = ",") # Configuração decimal
stock <- "^BVSP" # stock
start <- "2008-01-01"
end <- "2021-06-25" # Sys.Date()
periodicidade <- "monthly"
dataframe.atv <- getSymbols(stock, src = "yahoo", from = start, to = end, auto.assign = FALSE, periodicity = periodicidade)
names(dataframe.atv)
atv <- na.omit(dataframe.atv) # na.appox na.locf na.omit
head(atv) # Primeiros dados da base
tail(atv) # Últimos dados da base
summary(atv) # Estatísticas descritivas
str(atv) # Estrutura da série
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='white',dn.col='black'))
candleChart(atv, TA=c(addMACD(fast = 12, slow = 26, signal = 9), addVo(), addBBands()), show.grid = TRUE, "last 180 months", theme = chartTheme('white', up.col='white',dn.col='black'))
library(quantmod)
library(data.table)
library(caTools)
library(tidyverse)
library(ggplot2)
library(tseries)
library(lubridate)
library(GGally)
rm(list = ls())
options(max.print=1000000) # Número de linhas para visualização
options(digits = 8, OutDec = ",") # Configuração decimal
stock <- c("PETR3.SA")
stock2 <- c("PETR4.SA")
startdate <- as.Date("2019-01-01")
enddate <- as.Date("2021-12-31")
periodicidade = "daily"
atv <- getSymbols(stock, src = "yahoo", from = startdate, to = enddate, auto.assign = FALSE, periodicity = periodicidade)
atv2 <- getSymbols(stock2, src = "yahoo", from = startdate, to = enddate, auto.assign = FALSE, periodicity = periodicidade)
atv <- data.frame(atv)
atv <- na.omit(atv)
atv2 <- data.frame(atv2)
atv2 <- na.omit(atv2)
names(atv) <- c("Open", "Hight", "Low", "Close", "Volume", "Ajustado")
names(atv2) <- c("Open", "Hight", "Low", "Close", "Volume", "Ajustado")
rownames(atv)
rownames(atv2)
atv$Date <- rownames(atv)
atv2$Date <- rownames(atv2)
atv$Date <- parse_date_time(atv$Date, "ymd")
atv2$Date <- parse_date_time(atv2$Date, "ymd")
Base <- data.frame(atv$Date, atv$Ajustado, atv2$Ajustado)
names(Base) <- c("DATA", "ATIVO1", "ATIVO2")
summary(Base)
ggplot(Base, aes(DATA)) +
geom_line(aes(y = ATIVO1, colour = stock)) +
geom_line(aes(y = ATIVO2, colour = stock2)) +
xlab("Data") +
ylab("R$") +
labs(colour = 'Pares:', title = "Gráfico dos Pares")
ggplot(Base, aes(DATA)) +
geom_line(aes(y = ATIVO1, colour = stock)) +
geom_line(aes(y = ATIVO2, colour = stock2)) +
xlab("Data") +
ylab("R$") +
labs(colour = 'Pares:', title = "Gráfico dos Pares")
BaseCor <- Base
BaseCor$DATA <- NULL
knitr::kable(cor(BaseCor))
knitr::kable(cor(BaseCor))
ggpairs(BaseCor, lower = list(continuous = "smooth"))
regression <- lm(ATIVO1 ~ ATIVO2, data = Base)
summary(regression)
res <- residuals(regression)
plot(res, type = "l", col = "black", main = "Resíduos da regressão", ylab = "Resíduo", xlab = "Amostras")
Dfuller <- tseries::adf.test(res) # p-value demonstra a chance de não ser resíduos estacionários
ConfiabilidadeFuller <- Dfuller$p.value
ConfiabilidadeFuller <- (1 - ConfiabilidadeFuller) * 100
Dfuller
paste("Teste Dickey Fuller:", ConfiabilidadeFuller, "% de confiabilidade que são cointegrados")
library("quantmod")
library("lubridate")
library("e1071")
library(data.table)
library(gridExtra)
library(fTrading)
library(TTR)
library(TTR)
library(fastDummies)
library(dplyr)
library(ncar)
library(dplyr)
library(pracma)
library(scales)
library(ggplot2)
library(useful)
install.packages("gridExtra")
install.packages("fTrading")
install.packages("fastDummies")
install.packages("ncar")
install.packages("pracma")
install.packages("useful")
library("quantmod")
library("lubridate")
library("e1071")
library(data.table)
library(gridExtra)
library(fTrading)
library(TTR)
library(fastDummies)
library(dplyr)
library(ncar)
library(pracma)
library(scales)
library(ggplot2)
library(useful)
euro <- fread("EURUSD_H1.csv", header = TRUE, sep = ";")
euro <- fread("EURUSD_H1.csv", header = TRUE, sep = ";")
rm(list = ls())
euro <- fread("EURUSD_H1.csv", header = TRUE, sep = ";")
euro <- fread("EURUSD_H1.csv", header = TRUE, sep = ";")
setwd("/media/james/BKPExFATIn/GitHub/Portifolio/BackTeste_NaiveBayes") # direciona o R para pasta
getwd() # visualiza a pasta de trabalho do R
getwd() # visualiza a pasta de trabalho do R
euro <- fread("EURUSD_H1.csv", header = TRUE, sep = ";")
euro <- fread("EURUSD_H1.csv", header = TRUE, sep = ";")
euro <- as.data.frame(euro)
euro$Hour <- as.numeric(substr(euro$Date, 12, 13))
euro$Years <- as.numeric(substr(euro$Date, 7, 10))
euro$Pips <- (euro$Close - euro$Open)*10000
euro <- shift.column(data=euro, columns="Pips", len=1)
euro$Today <- ifelse(euro$Pips > 0,"Alta","Baixa")
euro$Dir <- ifelse(euro$Pips.Shifted>0,"Alta","Baixa")
euro$RSI <- RSI(euro$Close,n = 14)
euro$CCI <- CCI(euro$Close,n = 20)
euro$HoraAtual <- as.factor(euro$Hour)
euro$RSI_Status <- as.factor(ifelse(euro$RSI > 70,"Sobrecomprado",ifelse(euro$RSI < 30,"Sobrevendido","Neutro")))
euro$CCI_Status <- as.factor(ifelse(euro$CCI > 100,"Sobrecomprado",ifelse(euro$CCI < -100,"Sobrevendido","Neutro")))
table(euro$Dir,euro$RSI_Status)
training <- subset(euro,euro$Years <= 2017)
testing <-subset(euro,euro$Years == 2018)
bayes <- naiveBayes(as.factor(Dir) ~ CCI_Status + Hour, data= training, na.action = na.omit,method="class")
bayes
table(testing$Dir,testing$CCI_Status)
testing$Pred <- predict(bayes,testing)
table(testing$Pred,testing$Dir,dnn=list('Previsto','Real'))
(table(testing$Pred,testing$Dir,dnn=list('Previsto','Real'))[4]+table(testing$Pred,testing$Dir,dnn=list('Previsto','Real'))[1])/dim(testing)[1]
testing$Resultado <- ifelse(as.character(testing$Pred) == "Baixa",-1*testing$Pips.Shifted ,testing$Pips.Shifted )
cumulative_buy_pips <- cumsum(testing$Resultado)
df <- data.frame(seq.int(dim(testing)[1]),cumulative_buy_pips)
g <- ggplot(df, aes(seq.int(dim(testing)[1])))
g <- g + geom_line(aes(y=cumulative_buy_pips,linetype="Pips"), colour="blue")
g <- g + ggtitle("Naive Bayes")+labs(x="Resultados de 2018",
y="Pips Totais")
g <- g + annotate("text", x = dim(testing)[1]- 10, y = tail(cumulative_buy_pips,1)-45, label = paste(round(tail(cumulative_buy_pips,1),2)))
g <- g + theme(legend.position=c(.35, .95), legend.justification = c(1, 1),
legend.background = element_rect(color = "black",fill = "grey90", size = 1, linetype = "solid")) + scale_shape_discrete(name="")
g <- g + labs(linetype="Resultado acumulado")
g
